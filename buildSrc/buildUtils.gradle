import groovy.json.JsonSlurper

ext.getModuleVersionCode = { path ->
    def module = getModule(path)
    def version = null
    if (module != null) {
        version = module.versionCode
    }
    if (version == null) {
        throw new GradleException("Version code for module with path $path not found")
    }
    return version
}

ext.getModuleVersionName = { path ->
    def module = getModule(path)
    def version = ""
    if (module != null) {
        version = module.versionName
    }
    if (version.isEmpty()) {
        throw new GradleException("Version name for module with path $path not found")
    }
    return version
}



ext.getModule = { path ->
    if (path.isEmpty()) return ""
//    def lastIndex = path.lastIndexOf("/")
//    def lastPathSegment
//    if (lastIndex < 0 || lastIndex == path.size() - 1) {
//        lastPathSegment = path
//    } else {
//        lastPathSegment = path.substring(lastIndex + 1, path.length())
//    }
    def modules = new JsonSlurper().parse(new File("$rootDir/buildSrc/modules.json"), 'utf-8')
    def result = null
    modules.each { module ->
        if (module.id == path) {
            result = module
            return true
        }
    }
    if (result == null) {
        throw new GradleException("Module with id $path not found")
    }
    return result
}